== Region ==

== 6.2. The Region interface ==

The Region interface is a supplemental interface which must be
implemented by all objects ( Elements, pseudo-elements or other CSS
constructs such as slots) in an implementation which can be CSS
Regions.

[NoInterfaceObject]

interface Region {
  readonly attribute DOMString regionOverset;
  sequence<Range>? getRegionFlowRanges();
  CSSStyleDeclaration getComputedRegionStyle(Element elt);
  CSSStyleDeclaration getComputedRegionStyle(Element elt, DOMString
  pseudoElt);

};

Element implements Region;

The regionOverset attribute returns one of the following values:

‘overset’

The region is the last one in the region chain and not able to fit the
remaining content from the named flow. Note that the region's overflow
property value can be used to control the visibility of the
overflowing content and the ‘region-fragment’ property controls
whether or not fragmentation happens on the content that overflows the
last region.

‘fit’

The region's flow fragment content fits into the region's content
box. If the region is the last one in the region chain, it means that
the content fits without overflowing. If the region is not the last
one in the region chain, that means the named flow content is further
fitted in subsequent regions. In this last case, note that the named
flow fragment may be empty (for example if the region is too small to
accommodate any content). This value is returned if the region object
is not (or no longer) a region.

‘empty’

All content from the named flow was fitted in prior regions.

Note that if there is no content in the named flow, all regions
associated with that named flow should have their regionOverset
attribute return ‘empty’. If there is content in the flow but that
content does not generate any box for visual formatting, the ‘overset’
attribute on the first region in the region chain associated with the
flow will return ‘fit’.

The getRegionFlowRanges method returns an array of Range instances
corresponding to fragment from the named flow that is laid out in the
region. If the region has not received a fragment because it is too
small to accommodate any, the method returns a single Range where the
startContainer and startOffset have the same values as the
endContainer and endOffset and therefore the collapsed attribute on
the Range is true. In that situation, if the region is the first in
the region chain, the startContainer is the first Node in the named
flow and the startOffset is zero. If the region is the last region in
the region chain (but not the first and only one), the startContainer
and startOffset are the same values as the endContainer and endOffset
on the previous region in the region chain. The method returns null if
the region object is not (or no longer) a region.

The getComputedRegionStyle methods on the Region interface work the
same as the getComputedStyle [CSSOM] methods on the Window interface
[HTML5] with the following exceptions. For the Region interface the
CSSStyleDeclaration returned must include the result of region
styling. If the element is fragmented across region boundaries, the
CSSStyleDeclaration returned must apply only to the fragment that
flows through the CSS Region. The method returns null if the region
object is not (or no longer) a region.

If the element is not contained in the CSS Region at all, the method
returns the region styling that would apply to the element if it were
contained in the CSS Region (following how getComputedStyle works with
elements not contained in the window's document).

A Region instance may represent an object that is no longer a
region. This may happen for example if the ‘flow-from’ property on the
corresponding pseudo-element, element or other construct becomes
‘none’ but a script is still holding a reference to the Region object.

